// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/meteorae/meteorae-server/database"
)

// Item information.
type Item interface {
	IsItem()
}

// Authentication payload returned on successful login.
type AuthPayload struct {
	Token string         `json:"token"`
	User  *database.User `json:"user"`
}

// Result of a query containing multiple items.
type ItemsResult struct {
	Items []Item `json:"items"`
	Total *int64 `json:"total"`
}

type LatestResult struct {
	Library *database.Library `json:"library"`
	Items   []Item            `json:"items"`
}

// Result of a query containing multiple libraries.
type LibrariesResult struct {
	Libraries []*database.Library `json:"libraries"`
	Total     *int64              `json:"total"`
}

// Item information about a movie.
type Movie struct {
	ID          string            `json:"id"`
	Title       string            `json:"title"`
	ReleaseDate *string           `json:"releaseDate"`
	Summary     *string           `json:"summary"`
	Thumb       *string           `json:"thumb"`
	Art         *string           `json:"art"`
	CreatedAt   time.Time         `json:"createdAt"`
	UpdatedAt   time.Time         `json:"updatedAt"`
	Library     *database.Library `json:"library"`
}

func (Movie) IsItem() {}

// Result of a query containing multiple users.
type UsersResult struct {
	Users []*database.User `json:"users"`
	Total *int64           `json:"total"`
}
