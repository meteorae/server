// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/meteorae/meteorae-server/database/models"
)

// Item information.
type Item interface {
	IsItem()
}

type Metadata interface {
	IsMetadata()
}

// Authentication payload returned on successful login.
type AuthPayload struct {
	Token string       `json:"token"`
	User  *models.User `json:"user"`
}

// Result of a query containing multiple items.
type ItemsResult struct {
	Items []Metadata `json:"items"`
	Total *int64     `json:"total"`
}

// Result of a query containing multiple libraries.
type LibrariesResult struct {
	Libraries []*models.Library `json:"libraries"`
	Total     *int64            `json:"total"`
}

// Item information about a movie.
type Movie struct {
	ID          string          `json:"id"`
	Title       string          `json:"title"`
	ReleaseDate int64           `json:"releaseDate"`
	Plot        string          `json:"plot"`
	Thumb       string          `json:"thumb"`
	Art         string          `json:"art"`
	CreatedAt   time.Time       `json:"createdAt"`
	UpdatedAt   time.Time       `json:"updatedAt"`
	Library     *models.Library `json:"library"`
}

func (Movie) IsItem()     {}
func (Movie) IsMetadata() {}

// Result of a query containing multiple users.
type UsersResult struct {
	Users []*models.User `json:"users"`
	Total *int64         `json:"total"`
}
