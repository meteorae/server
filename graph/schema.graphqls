schema {
  query: Query
  mutation: Mutation
}

type Query {
  "Query the specified user."
  user(id: ID!): User
  "Query all users."
  users(limit: Int, offset: Int): UsersResult
  "Query the specified item."
  item(id: ID!): Item
  "Query all items."
  items(limit: Int, offset: Int, libraryId: ID!): ItemsResult
  "Query the specified library."
  library(id: ID!): Library
  "Query all libraries."
  libraries: LibrariesResult
  "Query latest content for all libraries."
  latest(limit: Int): [LatestResult]
}

type Mutation {
  "Authenticate user with the provided username and password."
  login(username: String!, password: String!): AuthPayload!
  "Create a new user with the provided username and password."
  register(username: String!, password: String!): AuthPayload!
  "Add a new library of the specified type, with the provided name, language and location. This will trigger a scan for all locations provided."
  addLibrary(
    type: String!
    name: String!
    language: String!
    locations: [String!]!
  ): Library!
}

"Authentication payload returned on successful login."
type AuthPayload {
  token: String!
  user: User!
}

"Result of a query containing multiple users."
type UsersResult {
  users: [User]
  total: Int
}

"Result of a query containing multiple items."
type ItemsResult {
  items: [Item]
  total: Int
}

"Result of a query containing multiple libraries."
type LibrariesResult {
  libraries: [Library]
  total: Int
}

"User account information."
type User {
  id: ID!
  username: String!
  createdAt: Time!
  updatedAt: Time!
}

"Library information."
type Library {
  id: ID!
  name: String!
  type: String!
  language: String!
  locations: [String!]!
  createdAt: Time!
  updatedAt: Time!
  scannedAt: Time!
}

type LatestResult {
  library: Library!
  items: [Item]
}

"Item information."
interface Item {
  id: ID!
  title: String!
  releaseDate: Int!
  summary: String!
  thumb: String!
  art: String!
  createdAt: Time!
  updatedAt: Time!
  library: Library!
}

"Item information about a movie."
type Movie implements Item {
  id: ID!
  title: String!
  releaseDate: Int!
  summary: String!
  thumb: String!
  art: String!
  createdAt: Time!
  updatedAt: Time!
  library: Library!
}

scalar Time
