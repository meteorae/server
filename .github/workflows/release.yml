name: Release
on:
  push:
    branches:
      - master
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "16"
      - uses: actions/setup-go@v2
        with:
          go-version: "^1.17.3"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install release dependencies
        run: sudo yarn add global semantic-release @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/exec
      - name: Add libvips backports PPAs
        run: sudo add-apt-repository -y ppa:strukturag/libde265 && sudo add-apt-repository -y ppa:strukturag/libheif && sudo add-apt-repository -y ppa:tonimelisma/ppa
      - name: Install dependencies
        run: sudo apt update && sudo apt install libsqlite3-dev libvips-dev
      - name: Build
        run: make build
      - name: Package release
        run: |
          cd bin/linux-x64
          zip -r ../linux-x64.zip .
          cd ../windows-x64
          zip -r ../windows-x64.zip .
          cd ../..
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn run semantic-release
